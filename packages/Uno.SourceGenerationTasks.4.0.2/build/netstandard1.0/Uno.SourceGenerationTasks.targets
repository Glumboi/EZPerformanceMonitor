<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
	<UnoSourceGeneratorTasksPath Condition="'$(UnoSourceGeneratorTasksPath)'=='' and '$(MSBuildRuntimeType)'!='Core'">..\Dev15.0\net472</UnoSourceGeneratorTasksPath>
	<UnoSourceGeneratorTasksPath Condition="'$(UnoSourceGeneratorTasksPath)'=='' and '$(MSBuildRuntimeType)'=='Core'">..\Dev15.0\netcoreapp3.1</UnoSourceGeneratorTasksPath>
	
	<UnoSourceGeneration_FixIntellisense Condition="'$(UnoSourceGeneration_FixIntellisense)'==''">true</UnoSourceGeneration_FixIntellisense>

	<_UnoSourceGeneratorOutputPath Condition="'$(UnoSourceGeneratorOutputPath)'==''">$(IntermediateOutputPath)</_UnoSourceGeneratorOutputPath>
	<_UnoSourceGeneratorOutputPath Condition="'$(UnoSourceGeneratorOutputPath)'!=''">$(UnoSourceGeneratorOutputPath)</_UnoSourceGeneratorOutputPath>

	<_UnoSourceGeneratorCacheFile>$(_UnoSourceGeneratorOutputPath)\g\generation.cache</_UnoSourceGeneratorCacheFile>

	<_UnoSourceGeneratorProjectType Condition="'$(ProjectTypeGuids)'=='{FEACFBD2-3405-455C-9665-78FE426C6842};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}'">ios</_UnoSourceGeneratorProjectType>
	<_UnoSourceGeneratorProjectType Condition="'$(ProjectTypeGuids)'=='{A3F8F2AB-B479-4A4A-A458-A89E7DC349F1};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}'">mac</_UnoSourceGeneratorProjectType>
	<_UnoSourceGeneratorProjectType Condition="'$(ProjectTypeGuids)'=='{EFBA0AD7-5A72-4C68-AF49-83D382785DCF};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}'">android</_UnoSourceGeneratorProjectType>
	<_UnoSourceGeneratorProjectType Condition="'$(ProjectTypeGuids)'=='{A5A43C5B-DE2A-4C0C-9213-0A381AF9435A};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}'">uap</_UnoSourceGeneratorProjectType>

	<!-- Backward compatibility with UnoSourceGeneratorUseGenerationHost property-->
	<UnoSourceGeneratorUseGenerationController Condition="'$(UnoSourceGeneratorUseGenerationHost)'!=''">true</UnoSourceGeneratorUseGenerationController>

	<!-- Disable the host controller when running outside of VS -->
	<UnoSourceGeneratorUseGenerationController Condition="'$(BuildingInsideVisualStudio)'=='' and '$(UnoSourceGeneratorUseGenerationController)'==''">false</UnoSourceGeneratorUseGenerationController>

	<!-- Enables the out of process single-use generation host -->
	<UnoSourceGeneratorUseGenerationHost Condition="'$(UnoSourceGeneratorUseGenerationHost)'==''">true</UnoSourceGeneratorUseGenerationHost>
  </PropertyGroup>
  
  <PropertyGroup>
	<!-- Workaround for https://github.com/unoplatform/uno/issues/3408 to get Refit 5+ to work alongside Uno SourceGeneration -->
	<RefitDisableGenerateRefitStubs Condition="'$(BuildingInsideUnoSourceGenerator)'!=''">true</RefitDisableGenerateRefitStubs>
  </PropertyGroup>
  
  <ItemGroup>
	<UnoSourceGeneratorBeforeTarget Include="XamlPreCompile" />
	<UnoSourceGeneratorBeforeTarget Include="CoreCompile" />

	<SourceGeneratorInput Include="@(Compile)" />
	<SourceGeneratorInput Include="@(Content)" />
	<SourceGeneratorInput Include="@(None)" />
  </ItemGroup>

  <UsingTask AssemblyFile="$(UnoSourceGeneratorTasksPath)\Uno.SourceGeneratorTasks.v761d799f9f24cb2da6a1bea35dc292a459e2f267.dll" TaskName="Uno.SourceGeneratorTasks.SourceGenerationTask_v761d799f9f24cb2da6a1bea35dc292a459e2f267" />

  <Target Name="UnoSourceGeneratorClean"
				  BeforeTargets="Clean">
	<RemoveDir Directories="$(_UnoSourceGeneratorOutputPath)\g" />
  </Target>

  <Target Name="_InjectGeneratedFiles"
				  BeforeTargets="ResolveNuGetPackageAssets;BeforeCompile"
				  Condition="('$(BuildingProject)' == 'false' or '$(DesignTimeBuild)' == 'true') and '$(BuildingInsideUnoSourceGenerator)' == '' and '$(MSBuildProjectExtension)'=='.csproj'">

	<!-- 
		This target is used to temporarily include generated files to help intellisense 
		make sense of generated code.
		-->

	<ReadLinesFromFile File="$(_UnoSourceGeneratorCacheFile)">
	  <Output
			  TaskParameter="Lines"
			  ItemName="GeneratedFilesCachedItems"/>
	</ReadLinesFromFile>

	<ItemGroup>
	  <Compile Include="@(GeneratedFilesCachedItems)" />

	  <!-- Inform tooling & IDE of new files to process (mostly for intellisense) -->
	  <_GeneratedCodeFiles Include="@(UnoGeneratedFiles)" />
	</ItemGroup>

  </Target>

  <Target Name="_UnoSourceGenerator"
				  Condition="'$(BuildingProject)' == 'true' and '$(BuildingInsideUnoSourceGenerator)' == '' and '$(DesignTimeBuild)' != 'true' and '$(MSBuildProjectExtension)'=='.csproj'"
				  BeforeTargets="@(UnoSourceGeneratorBeforeTarget)"
				  Inputs="@(SourceGeneratorInput)" Outputs="$(_UnoSourceGeneratorCacheFile)">
	<!-- 
		This target must run before "CoreCompile" otherwise the dependencies
		for the current project will not be built before the source generator runs.
		-->

	<PropertyGroup Condition="'$(SourceGeneratorTargetFramework)'==''">
	  <SourceGeneratorTargetFramework>$(TargetFramework)</SourceGeneratorTargetFramework>

	  <!-- 
			  "Legacy" projects required that the TargetFramework property to be set for 
			  references to be resolved properly.
			 -->
	  <SourceGeneratorTargetFramework Condition="'$(_UnoSourceGeneratorProjectType)'=='uap'">uap10.0$(NuGetTargetMoniker.Substring($(NuGetTargetMoniker.LastIndexOf('.'))))</SourceGeneratorTargetFramework>
	  <SourceGeneratorTargetFramework Condition="'$(_UnoSourceGeneratorProjectType)'=='ios'">xamarinios10</SourceGeneratorTargetFramework>
	  <SourceGeneratorTargetFramework Condition="'$(_UnoSourceGeneratorProjectType)'=='mac'">xamarinmac20</SourceGeneratorTargetFramework>
	  <SourceGeneratorTargetFramework Condition="'$(_UnoSourceGeneratorProjectType)'=='android'">monoandroid$(TargetFrameworkVersion.Trim('v').Replace('.', ''))</SourceGeneratorTargetFramework>
	</PropertyGroup>

	<PropertyGroup>

	  <!-- Don't spin up the generators task if there are no source generators -->
	  <_hasSourceGenerators>true</_hasSourceGenerators>
	  <_hasSourceGenerators Condition="'@(SourceGenerator)'=='' and '$(VisualStudioVersion)' &gt; '15.0'">false</_hasSourceGenerators>

	  <UnoSourceGeneratorBinLogOutputPath Condition="'$(UnoSourceGeneratorBinLogOutputPath)'==''">$(IntermediateOutputPath)</UnoSourceGeneratorBinLogOutputPath>
	</PropertyGroup>

	<ItemGroup Condition="'$(ReferencePathWithRefAssemblies)'==''">
	  <!-- This case is present to handle the case of the UWP build that uses the XamlPreCompile step -->
	  
	  <!-- Filter ReferencePath as it may contain pdbs as well -->
	  <_AssembliesForReferenceCopyLocalPaths Include="@(ReferencePath)"
                                             Condition="'%(Extension)' == '.dll'" />
	</ItemGroup>

	<ItemGroup Condition="'$(ReferencePathWithRefAssemblies)'!=''">
	  <!-- Filter ReferenceCopyLocalPaths as it may contain pdbs as well -->
	  <_AssembliesForReferenceCopyLocalPaths Include="@(ReferencePathWithRefAssemblies)"
                                             Condition="'%(Extension)' == '.dll'" />
	</ItemGroup>

	<ItemGroup>
	  <!-- Capture the values of the additional property values -->
	  <_UnoSourceGeneratorAdditionalProperty Include="@(UnoSourceGeneratorAdditionalProperty)" Value="$(%(Identity))" />
	</ItemGroup>

	<PropertyGroup Condition="'$(_UnoSourceGeneratorProjectType)'=='ios' or '$(_UnoSourceGeneratorProjectType)'=='mac'">
	  <!-- 
			Workaround until we can determine where the logic behind `TargetFrameworkRootPathSearchPathsOSX` 
			is defined, to be applied in a roslyn based project loading.
			The TargetFrameworkRootPathSearchPathsOSX variable is defined in MSBuild.dll config sections on OSX.
			-->
	  <SourceGeneratorTargetFrameworkRootPath>$(TargetFrameworkRootPath)</SourceGeneratorTargetFrameworkRootPath>
	  <SourceGeneratorTargetFrameworkRootPath Condition="'$(SourceGeneratorTargetFrameworkRootPath)'==''">$(TargetFrameworkRootPathSearchPathsOSX)</SourceGeneratorTargetFrameworkRootPath>
	</PropertyGroup>

	<SourceGenerationTask_v761d799f9f24cb2da6a1bea35dc292a459e2f267 ProjectFile="$(MSBuildProjectFullPath)"
							  OutputPath="$(_UnoSourceGeneratorOutputPath)\g"
							  Configuration="$(Configuration)"
							  SourceGenerators="@(SourceGenerator)"
							  Platform="$(Platform)"
							  VisualStudioVersion="$(VisualStudioVersion)"
							  TargetFramework="$(SourceGeneratorTargetFramework)"
							  TargetFrameworkRootPath="$(TargetFrameworkRootPath)"
							  AdditionalAssemblies="@(SourceGeneratorAdditionalAssemblies)"
							  UseGenerationController="$(UnoSourceGeneratorUseGenerationController)"
							  UseGenerationHost="$(UnoSourceGeneratorUseGenerationHost)"
							  CaptureGenerationHostOutput="$(UnoSourceGeneratorCaptureGenerationHostOutput)"
							  BinLogOutputPath="$(UnoSourceGeneratorBinLogOutputPath)"
							  BinLogEnabled="$(UnoSourceGeneratorUnsecureBinLogEnabled)"
							  ReferencePath="@(_AssembliesForReferenceCopyLocalPaths)"
						      AdditionalProperties="@(_UnoSourceGeneratorAdditionalProperty)"
							  Condition="$(_hasSourceGenerators)">
	  <Output TaskParameter="GenereratedFiles" ItemName="UnoGeneratedFiles" />
	</SourceGenerationTask_v761d799f9f24cb2da6a1bea35dc292a459e2f267>

	<Message Condition="$(_hasSourceGenerators)" Text="Generated files @(UnoGeneratedFiles)" />

	<ItemGroup Condition="$(_hasSourceGenerators)">
	  <Compile Include="@(UnoGeneratedFiles)" />

	  <!-- Inform tooling & IDE of new files to process (mostly for intellisense) -->
	  <_GeneratedCodeFiles Include="@(UnoGeneratedFiles)" />
	</ItemGroup>

	<WriteLinesToFile
			Condition="'@(UnoGeneratedFiles)'!='' and $(_hasSourceGenerators)"
			File="$(_UnoSourceGeneratorCacheFile)"
			Lines="@(UnoGeneratedFiles)"
			Overwrite="true" />

  </Target>

  <Target Name="_FillSourceGeneratorInput"
				  BeforeTargets="_UnoSourceGenerator">

	<!-- 
		Capture the source generator input before executing _UnoSourceGenerator, and not as a global itemgroup.
		Global itemgroups are executed too early, and Compile, Content and None groups 
		are not available at this time.
		-->
	<ItemGroup>
	  <SourceGeneratorInput Include="@(Compile)" />
	  <SourceGeneratorInput Include="@(Content)" />
	  <SourceGeneratorInput Include="@(None)" />
	  <SourceGeneratorInput Include="@(Reference)" />
	  <SourceGeneratorInput Include="@(PackageReference)" />
	  <SourceGeneratorInput Include="@(ProjectReference)" />
	</ItemGroup>
  </Target>

  <Target Name="InvalidAndroidDesignerWorkaround"
          AfterTargets="UpdateGeneratedFiles"
          Condition=" '$(BuildingInsideUnoSourceGenerator)' != '' and ('$(_UnoSourceGeneratorProjectType)'=='android' or '$(TargetFrameworkIdentifier)'=='MonoAndroid')">

	<!--
	During the loading of a Xamarin.Android project, when AndroidUseIntermediateDesignerFile is set to true, the
	designer file is added to the compilation list, even though it's not present. This makes the msbuild roslyn workspace
	try to build this file, raising a error that is not significant as the result of the build is not used.

	This target removes that file from the compilation list when the project is loaded inside the source generators
	-->
	<ItemGroup>
	  <Compile Remove="$(_AndroidResourceDesignerFile)" />
	</ItemGroup>
  </Target>

</Project>
